
-> "React.createElement" is a core functionality of react but to
create root element i.e. to put the code in browser we need
to use "ReactDOM.createRoot()".

-> "React.createElement("h1", {}, "Hello World from React!") "
empty object in above line of code is used to give attributes
to the element like "id", "class" etc....

-> "React.createElement()" : 
        It does not create a element 
        but a javascript object which also has props.

-> "render() method" : It takes the object created by createElement method and converts it in html tag.


-> "Process for configuring git repo --------------"
        git init
        git add README.md
        change branch name to git branch -M main or <branchname>
        git commit 
        git remote add origin "repo url"
        git push origin main or <branchname>

-> "We need to process our code i.e. bundle it, compress it
optimise it to push it io production that's why me make a build
or bundle to push it to production."

-> "CRA" - It provides us a scaffold of react app which is already
        production ready.
        <------------- It uses webpack and babel as bundler behind the scenes. ------------->

-> "Make our app faster" - React make our app fast but there are lots of other packages that are
        needed to make our app faster and scalable.

-> "NPM" - Npm manages packages but remember it does not stand for "Node Package Manager".
        It is a standard repo for all the packages. It is one of biggest repo for packages, libraries
        and it manages our packages.

-> "Create React App without CRA or vite but from scratch":
        -- npm init (after this we will get new file called "package.json")
                // "package.json" - basically configuration of npm that we need in our project.
                // "Dependencies or dev-dependencies": Packages on which our project depends on exist in "package.json".
        -- first package needs to be installed is a "Bundler": Our whole code needs to be bundled together, minified, cleaned 
                before pushing to the production like webpack, parcel and vite.
                <-------- We will be using parcel as "bundler" in this app ------------>
                Command used will be "npm install -D parcel"
        <------------- Dependencies and Dev-Dependencies -------------->
                Dev dependencies are those which are used in "development" phase 
                and Dependencies are those which are used in both "development and production" phase.
        -- "To start the app or build it(development)": type "npx parcel source file name i.e. index.html"
        -- "To Build Production Ready app": npx parcel build index.html but we eill get an error after this
                because it conflicts with "main" command present in package.json because this command tells 
                that our entry point is "App.js" or whatever we have present but parcel does not need that so remove that "main" command from package.json before creating production ready build.
        -- Then this production build gets stored in another folder called "dist".
        -- To make our app compatible with other browsers: We will use "browserlist" in our package.json
                It will take an array of brower and their versions. What it will do is our app will definitely 
                going to support those versions whether it works in others or not.
                
                REFER WEBSITE "https://browserslist.dev/?q=bGFzdCAyIHZlcnNpb25z"

-> "Transitive Dependencies": A dependency like parcel can depend on other dependencies 
                        and those depedencies can depend on others                        
                        and so on.. All these dependencies get installed in "node_modules"

-> "start": its a keyword reserved by npm in package.json. We can simply use npm start instead of npm run start. both are same in case of "start" command.


# React Algo- Reconciliation Algorithm:
        - It is also known as REACT FIBER.
        - We have DOM. Supppose we have a container and we have 15 cards in it.
        Now, my UI changes from 15 cards to 3 cards using some filter.
        What react does and why react is fast is because react creates VIRTUAL DOM.
        - When something changes in UI is called RECONCILIATION.
        - This new Algorithm comes up in React 16 which is a new way of calculating the DIFF.
        - After REACT 16 this algo is called as REACT FIBER.

# VIRTUAL DOM:
        - Actual DOM has html tag present in browser and VIRTUAL DOM is the representation of our actual DOM.
        - VIRTUAL DOM is basically the react elements (the object created by React) or nested react elements.

# Diff Algorithm:
        - This algorithm finds out the difference between two  virtual DOMS i.e. previous VIRTUAL DOM and updated VIRTUAL DOM.
        - Suppose previous virtual dom has 15 nodes and after filtering new VD has 3 nodes then the difference is of 12 nodes. So, Diff Algo calculates the difference first then update the Actual DOM. It does not touch the HTML or Actual DOM until it calculates the difference. Only After calculating DIFF it updates the Actual DOM.

# REACT always keeps track of the whole UI in form of virtual DOM.




        